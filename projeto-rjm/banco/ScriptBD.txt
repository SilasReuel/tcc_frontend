		* --- USUÁRIOS --- *

CREATE TABLE usuarios (
	id_user SERIAL PRIMARY KEY,
	nome VARCHAR(100) NOT NULL,
	senha VARCHAR(100) NOT NULL,
	email VARCHAR(50) NOT NULL,
	user_git VARCHAR(40) NOT NULL
);

		* --- EQUIPES --- *

CREATE TABLE equipes (
	id_equipe SERIAL PRIMARY KEY,
	nome_equipe VARCHAR(100) NOT NULL
);

		* --- TASK --- *

CREATE TABLE task (
	id_task SERIAL PRIMARY KEY,
	nome_task VARCHAR(100) NOT NULL,
	data_criacao DATE NOT NULL,
	data_alt_task DATE NULL,
	descricao TEXT NULL,
	status STATUS NOT NULL,
	files OID NULL
);

		* --- FUNÇÕES --- *

CREATE TABLE funcoes (
	fk_id_user INT,
	fk_id_equipe INT,
	cargo TIPO NOT NULL,
	FOREIGN KEY (fk_id_user) REFERENCES usuarios(id_user),
	FOREIGN KEY (fk_id_equipe) REFERENCES equipes(id_equipe)
);

		* --- SPRINT --- *

CREATE TABLE sprint (
	fk_id_equipe INT NOT NULL,
	fk_id_task INT NOT NULL,
	data_inicio DATE NOT NULL,
	data_fim DATE NULL,
	FOREIGN KEY (fk_id_equipe) REFERENCES equipes(id_equipe),
		FOREIGN KEY (fk_id_task) REFERENCES task(id_task)
);

		* --- GIT --- *

CREATE TABLE git (
	fk_id_user INT NOT NULL,
	fk_id_task INT NOT NULL,
	evento_git VARCHAR(20) NOT NULL,
	registro_evento VARCHAR(30) NOT NULL,
	data_update DATE NOT NULL,
	nome_repositorio VARCHAR(50) NOT NULL,
	desc_commit TEXT NOT NULL,
	FOREIGN KEY (fk_id_user) REFERENCES usuarios(id_user),
	FOREIGN KEY (fk_id_task) REFERENCES task(id_task)
);